-------------------------------------------------
------------------ GROUP BY ---------------------
-------------------------------------------------

1. Contare quanti iscritti ci sono stati ogni anno
    SELECT COUNT(*) AS `n_stud`, YEAR(`enrolment_date`) AS `enrol_year`
    FROM `students`
    GROUP BY `enrol_year`;

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
    SELECT COUNT(*) AS `n_teachers`, `office_address`
    FROM `teachers`
    GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame
    SELECT AVG(`vote`), `exam_id` 
    FROM `exam_student`
    GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
    SELECT COUNT(*) AS `n_courses` , `department_id` 
    FROM `degrees`
    GROUP BY `department_id`;

-------------------------------------------------
-------------------- JOIN -----------------------
-------------------------------------------------

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
    SELECT `degrees`.`name`, `students`.*
    FROM `degrees`
    JOIN `students`
    ON `degrees`.`id` = `students`.`degree_id`
    WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
    SELECT `departments`.`name`, `degrees`.*
    FROM `departments`
    JOIN `degrees`
    ON `departments`.`id` = `degrees`.`department_id`
    WHERE `departments`.`name` = 'Dipartimento di Neuroscienze'
    AND `degrees`.`level` = 'Magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
    SELECT `courses`.`name`, `course_teacher`.`teacher_id` 
    FROM `courses`
    JOIN `course_teacher`
    ON `courses`.`id` = `course_teacher`.`course_id`
    WHERE `course_teacher`.`teacher_id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
    SELECT `departments`.`name` AS `dep_name`, `degrees`.*, `students`.`name` AS `stud_name`, `students`.`surname` AS `stud_surname`
    FROM `departments`
    RIGHT JOIN `degrees`
    ON `departments`.`id` = `degrees`.`department_id`
    RIGHT JOIN `students`
    ON `degrees`.`id` = `students`.`degree_id`
    ORDER BY `stud_surname`, `stud_name` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    SELECT `degrees`.`name` AS `deg_name`, `courses`.`name` AS `course_name`, `teachers`.*
    FROM `degrees`
    LEFT JOIN `courses`
    ON `degrees`.`id` = `courses`.`degree_id`
    LEFT JOIN `course_teacher`
    ON `courses`.`id` = `course_teacher`.`course_id`
    LEFT JOIN `teachers`
    ON `course_teacher`.`teacher_id` = `teachers`.`id`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
    SELECT DISTINCT `departments`.`name` AS `dep_name`, `teachers`.*
    FROM `departments`
    LEFT JOIN `degrees`
    ON `departments`.`id` = `degrees`.`department_id`
    LEFT JOIN `courses`
    ON `degrees`.`id` = `courses`.`degree_id`
    LEFT JOIN `course_teacher`
    ON `courses`.`id` = `course_teacher`.`course_id`
    LEFT JOIN `teachers`
    ON `course_teacher`.`teacher_id` = `teachers`.`id`
    WHERE `departments`.`name` = 'Dipartimento di Matematica'
    ORDER BY `teachers`.`surname`, `teachers`.`name` ASC;

7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami
    SELECT `students`.`name` AS `stud_name`, `students`.`surname` AS `stud_surname`, `courses`.`name` AS `exam`, MIN(`exam_student`.`vote`) AS `min_res`, MAX(`exam_student`.`vote`) AS `max_res`, COUNT(`exam_student`.`exam_id`) AS `tentatives`
    FROM `students`
    LEFT JOIN `exam_student`
    ON `students`.`id` = `exam_student`.`student_id`
    LEFT JOIN `exams`
    ON `exam_student`.`exam_id` = `exams`.`id`
    LEFT JOIN `courses`
    ON `exams`.`course_id` = `courses`.`id`
    GROUP BY `exam`, `stud_name`, `stud_surname`  
    HAVING `max_res` >= 18
    ORDER BY `stud_name`, `stud_surname` ASC;

    -- come fare query annidata? --
    SELECT *
    FROM (
        SELECT `students`.`name` AS `stud_name`, `students`.`surname` AS `stud_surname`, `courses`.`name` AS `exam`, MIN(`exam_student`.`vote`) AS `min_res`, MAX(`exam_student`.`vote`) AS `max_res`, COUNT(`exam_student`.`exam_id`) AS `tentatives`
        FROM `students`
        LEFT JOIN `exam_student`
        ON `students`.`id` = `exam_student`.`student_id`
        LEFT JOIN `exams`
        ON `exam_student`.`exam_id` = `exams`.`id`
        LEFT JOIN `courses`
        ON `exams`.`course_id` = `courses`.`id`
        GROUP BY `exam`, `stud_name`, `stud_surname`
    ) AS `tentatives`
    WHERE `max_res` >= 18;

